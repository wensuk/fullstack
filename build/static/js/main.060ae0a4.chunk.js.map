{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","components/ErrorNotification.js","App.js","index.js"],"names":["PersonForm","addPerson","name","number","onSubmit","value","onChange","type","Persons","filter","persons","removeContact","person","includes","map","id","onClick","Filter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","ErrorNotification","errorMessage","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setErrorMessage","statusMessage","setStatusMessage","useEffect","personService","catch","error","setTimeout","event","console","log","target","preventDefault","personObject","window","confirm","concat","ReactDOM","render","document","getElementById"],"mappings":"+JAmBeA,EAhBI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnC,OACA,uBAAMC,SAAUH,EAAhB,UACI,yCACQ,uBAAOI,MAAOH,EAAKG,MAAOC,SAAUJ,EAAKI,cAEjD,2CACU,uBAAOD,MAAOF,EAAOE,MAAOC,SAAUH,EAAOG,cAEvD,8BACE,wBAAQC,KAAK,SAAb,uBCEKC,EAbC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,cAChC,OACID,EAAQD,QAAO,SAAAG,GAAM,OACjBA,EAAOV,KAAKW,SAASJ,MAASK,KAAI,SAAAF,GAAM,OACpC,gCACKA,EAAOV,KADZ,IACmBU,EAAOT,OACtB,wBAAQE,MAAOO,EAAOG,GAAIC,QAASL,EAAnC,sBAFMC,EAAOG,QCIlBE,EARA,SAAC,GAAyB,IAAvBZ,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrB,OACI,qDACsB,uBAAOD,MAAOA,EAAOC,SAAUA,Q,gBCJvDY,EAAU,sDAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAKA,EAASC,SAkB/B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAKA,EAASC,SAa/B,EAVA,SAACR,EAAIS,GAEhB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBH,GAAMS,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACR,GAEZ,OADgBI,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BH,IAC5BM,MAAK,SAAAC,GAAQ,OAAKA,EAASC,SCR/BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKC,UAAU,SAAf,SACMD,KCKCE,EAZW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACzB,OAAqB,OAAjBA,EACO,KAIP,qBAAKF,UAAU,QAAf,SACKE,KCoJEC,EAlJH,WAEV,MAAgCC,mBAAS,IAAzC,mBAAQxB,EAAR,KAAiByB,EAAjB,KAEA,EAAgCD,mBAAS,IAAzC,mBAAQE,EAAR,KAAiBC,EAAjB,KACA,EAAmCH,mBAAS,IAA5C,mBAAQI,EAAR,KAAmBC,EAAnB,KACA,EAAmCL,mBAAS,IAA5C,mBAAQM,EAAR,KAAmBC,EAAnB,KACA,EAA0CP,mBAAS,IAAnD,mBAAQF,EAAR,KAAsBU,EAAtB,KACA,EAA4CR,mBAAS,IAArD,mBAAQS,EAAR,KAAuBC,EAAvB,KAiBAC,qBAfa,WACXC,IAEGzB,MAAK,SAAAE,GACJY,EAAWZ,GACXqB,EAAiB,MACjBF,EAAgB,SAEjBK,OAAM,SAAAC,GACLN,EAAgB,6BAChBO,YAAW,WACTP,EAAgB,QACf,UAGO,IAoGhB,OACE,gCACE,2CACA,cAAC,EAAD,CAAcb,QAASc,IACvB,cAAC,EAAD,CAAmBX,aAAcA,IACjC,wCACA,cAAC,EAAD,CAAQ3B,MAAOmC,EAAWlC,SAlCX,SAAC4C,GAClBC,QAAQC,IAAIF,EAAMG,OAAOhD,OACzBoC,EAAaS,EAAMG,OAAOhD,UAkCxB,2CACA,cAAC,EAAD,CAAYJ,UAzGE,SAACiD,GACjBA,EAAMI,iBAEN,IAAMC,EAAe,CACnBrD,KAAMkC,EACNjC,OAAQmC,GAIV5B,EAAQI,KAAI,SAAAF,GACNA,EAAOV,OAASkC,IAClBe,QAAQC,IAAI,2BACII,OAAOC,QAAP,UAAkBrB,EAAlB,4EAEdU,EACUlC,EAAOG,GAAIwC,GAClBlC,MAAK,SAAAE,GACJqB,EAAiB,GAAD,OAAIR,EAAJ,0BAChBa,YAAW,WACTL,EAAiB,QAChB,QAEJG,OAAM,SAAAC,GACLN,EAAgB,GAAD,OAAIN,EAAJ,qCACfa,YAAW,WACTP,EAAgB,QACf,QAGLS,QAAQC,IAAI,yBAMF1C,EAAQI,KAAI,SAAAF,GAAM,OAAIA,EAAOV,QAChCW,SAASuB,KACtBU,EACQS,GACPlC,MAAK,SAAAE,GACJY,EAAWzB,EAAQgD,OAAOnC,IAC1BqB,EAAiB,GAAD,OAAIR,EAAJ,wBAChBa,YAAW,WACTL,EAAiB,QAChB,KACHP,EAAW,IACXE,EAAa,OAEdQ,OAAM,SAAAC,GACLN,EAAgB,6BAChBO,YAAW,WACTP,EAAgB,QACf,QAELS,QAAQC,IAAI,YAmDsBlD,KAAM,CAACG,MAAO+B,EAAS9B,SA/C7C,SAAC4C,GACfC,QAAQC,IAAIF,EAAMG,OAAOhD,OACzBgC,EAAWa,EAAMG,OAAOhD,SA8CpBF,OAAQ,CAACE,MAAOiC,EAAWhC,SA3Cf,SAAC4C,GACjBC,QAAQC,IAAIF,EAAMG,OAAOhD,OACzBkC,EAAaW,EAAMG,OAAOhD,WA2CxB,yCACE,cAAC,EAAD,CAASI,OAAQ+B,EAAW9B,QAASA,EAASC,cApC9B,SAACuC,GACrBA,EAAMI,iBACQE,OAAOC,QAAQ,mDAE3BN,QAAQC,IAAI,eACZN,EACUI,EAAMG,OAAOhD,OACpBgB,MAAK,SAAAE,GACJqB,EAAiB,wBACjBK,YAAW,WACTL,EAAiB,QAChB,QAEJG,OAAM,SAAAC,GACLN,EAAgB,+BAChBO,YAAW,WACTP,EAAgB,QACf,YAqBP,uBACA,0CAAaN,EAAb,IAAuBE,EAAvB,IAAmCE,EAAnC,WC/INmB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.060ae0a4.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst PersonForm = ({ addPerson, name, number }) => {\n    return (\n    <form onSubmit={addPerson}>  \n        <div>\n          name: <input value={name.value} onChange={name.onChange}/>\n        </div>\n        <div>\n          number: <input value={number.value} onChange={number.onChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ filter, persons, removeContact}) => {\n    return(\n        persons.filter(person => \n            person.name.includes(filter)).map(person =>\n                <div key={person.id}>\n                    {person.name} {person.number}\n                    <button value={person.id} onClick={removeContact}>delete</button>\n                </div>)\n    )\n\n}\n\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ value, onChange }) => {\n    return(\n        <div> \n            Filter shown with <input value={value} onChange={onChange}/>\n        </div>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = 'https://quiet-ridge-45798.herokuapp.com/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response =>  response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response =>  response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response =>  response.data)\n}\n\nexport default { getAll, create, update, remove }","const Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return(\n        <div className='status'>\n            { message }\n        </div>\n    )\n}\n\nexport default Notification","const ErrorNotification = ({ errorMessage }) => {\n    if (errorMessage === null) {\n        return null\n    }\n\n    return(\n        <div className='error'>\n            {errorMessage}\n        </div>\n    )\n}\n\nexport default ErrorNotification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorNotification from './components/ErrorNotification'\n\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]) \n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState('')\n  const [ statusMessage, setStatusMessage ] = useState('')\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(data => {\n        setPersons(data) \n        setStatusMessage(null)\n        setErrorMessage(null)\n      })\n      .catch(error => {\n        setErrorMessage('Error. Cannot access data')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000) \n      })\n  }\n  useEffect(hook, [])\n\n\n  // Add new contact\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    // Handle Update\n    persons.map(person => {\n      if (person.name === newName) {\n        console.log(\"found a duplicate ones!\")\n        const replace = window.confirm(`${newName} is already added to phonebook. Do you want to replace the old contact?`)\n        if (replace) {\n          personService\n            .update(person.id, personObject)\n            .then(data => {\n              setStatusMessage(`${newName} Succesfully Updated!`)\n              setTimeout(() => {\n                setStatusMessage(null)\n              }, 5000) \n            })\n            .catch(error => {\n              setErrorMessage(`${newName} has been deleted. Cannot update`)\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000) \n            })\n          }else{\n            console.log(\"Not replacing....\")\n          }\n      }\n    })\n\n    // Check existance & create new contact\n    const checkName = persons.map(person => person.name)\n    if (!checkName.includes(newName)) {\n      personService\n      .create(personObject)\n      .then(data => {\n        setPersons(persons.concat(data))\n        setStatusMessage(`${newName} Succesfully Added!`)\n        setTimeout(() => {\n          setStatusMessage(null)\n        }, 5000) \n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        setErrorMessage('Error. Cannot create data')\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000) \n      })\n      console.log(\"Reset!\")\n    }\n  }\n\n  const addName = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const addNumber = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const searchName = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const removeContact = (event) => {\n    event.preventDefault()\n    const promp = window.confirm(\"Are you sure you want to delete this contact?\")\n    if (promp) {\n      console.log(\"Deleting...\")\n      personService\n        .remove(event.target.value)\n        .then(data => {\n          setStatusMessage(\"Succesfully Deleted!\")\n          setTimeout(() => {\n            setStatusMessage(null)\n          }, 5000) \n        })\n        .catch(error => {\n          setErrorMessage(`'Error. Cannot delete data'`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000) \n        })\n    }\n  }\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={statusMessage} />\n      <ErrorNotification errorMessage={errorMessage} />\n      <h2>Search</h2>\n      <Filter value={newFilter} onChange={searchName}/>\n\n      <h2>Add A New</h2>\n      <PersonForm addPerson={addPerson} name={{value: newName, onChange: addName }}\n        number={{value: newNumber, onChange: addNumber}} />\n\n      <h2>Numbers</h2>\n        <Persons filter={newFilter} persons={persons} removeContact={removeContact} />\n\n      <br></br>\n      <div>debug: {newName} {newNumber} {newFilter} </div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}